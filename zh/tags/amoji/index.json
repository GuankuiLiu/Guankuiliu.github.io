[{"content":"将单个PDF文件分页保存 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import PyPDF2 pdf_file = open(\u0026#39;./file.pdf\u0026#39;, \u0026#39;rb\u0026#39;) pdf_reader = PyPDF2.PdfReader(pdf_file) for page_num in range(len(pdf_reader.pages)): page = pdf_reader.pages[page_num] pdf_writer = PyPDF2.PdfWriter() pdf_writer.add_page(page) output_file_name = f\u0026#39;page_{page_num+1}.pdf\u0026#39; output_file = open(output_file_name, \u0026#39;wb\u0026#39;) pdf_writer.write(output_file) output_file.close() pdf_file.close()   提取PDF中关键字所在的句子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  import pdfplumber import re def extract_sentences_with_keyword(pdf_path, txt_path, keyword): with pdfplumber.open(pdf_path) as pdf: with open(txt_path, \u0026#39;w\u0026#39;, encoding=\u0026#39;utf-8\u0026#39;) as txt_file: for page in pdf.pages: text = page.extract_text() if text: text = text.replace(\u0026#39;\\n\u0026#39;, \u0026#39; \u0026#39;).replace(\u0026#39;\\r\u0026#39;, \u0026#39;\u0026#39;) # 去除换行符和回车符 sentences = re.split(\u0026#39;[.!?。！？]\u0026#39;, text) # 将文本按句子分割 for sentence in sentences: sentence = sentence.strip() # 去除句子两端的空格 if keyword in sentence: txt_file.write(sentence + \u0026#39;\\n\u0026#39;) # 将含有关键词的句子写入文本文件 pdf_file = \u0026#39;file.pdf\u0026#39; txt_file = \u0026#39;file.txt\u0026#39; keyword = \u0026#39;海洋热浪\u0026#39; extract_sentences_with_keyword(pdf_file, txt_file, keyword)   ","description":"分页保存为单个PDF文件以及提取含有关键词的句子","id":2,"section":"posts","tags":["Python"],"title":"Python处理PDF文件","uri":"https://guankuiliu.github.io/zh/posts/2023/2023-07-11-pypdf2/"},{"content":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import matplotlib import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.basemap import Basemap matplotlib.rcParams[\u0026#39;font.sans-serif\u0026#39;] = [\u0026#39;SimHei\u0026#39;] mp = Basemap(width = 4500000, height = 4000000, projection = \u0026#39;aea\u0026#39;, resolution = \u0026#39;l\u0026#39;, lon_0 = 125, lat_0 = 25) mp.drawcoastlines() mp.drawcountries() mp.drawmapboundary(fill_color = \u0026#39;aqua\u0026#39;) mp.fillcontinents(color = \u0026#39;pink\u0026#39;, lake_color = \u0026#39;b\u0026#39;) mp.drawmeridians(np.arange(-180., 181., 20.), labels = [0, 0, 0, 1], fontsize = 12) mp.drawparallels([12, 26.5, 35], labels = [1, 0, 0, 0], fontsize = 12, linewidth = 2, color=\u0026#39;red\u0026#39;, dashes=[2, 2]) ax = plt.gca() plt.annotate(u\u0026#34;渤海\u0026#34;, xy = (0.38, 0.86), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;黄海\u0026#34;, xy = (0.42, 0.72), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;东海\u0026#34;, xy = (0.46, 0.60), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) plt.annotate(u\u0026#34;南海\u0026#34;, xy = (0.20, 0.18), xycoords = \u0026#39;axes fraction\u0026#39;, color = \u0026#39;r\u0026#39;, fontsize = 12) box = dict(fc = \u0026#39;w\u0026#39;, ec = \u0026#39;k\u0026#39;, alpha = 0.9) plt.annotate(u\u0026#34;5月1日12时至9月1日12时\u0026#34;, xy = (0.38, 0.81), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.annotate(u\u0026#34;5月1日12时至9月16日12时\u0026#34;, xy = (0.46, 0.66), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.annotate(u\u0026#34;5月1日12时至8月16日12时\u0026#34;, xy = (0.20, 0.27), xycoords = \u0026#39;axes fraction\u0026#39;, fontsize = 12, bbox = box) plt.show()   ","description":"Basemap作图","id":3,"section":"posts","tags":["Python"],"title":"2023年中国海伏季休渔时间","uri":"https://guankuiliu.github.io/zh/posts/2023/2023-07-10-2023_fishing_closure/"},{"content":"这是Lingdong Huang大神的一个项目，可以随机生成几种鱼的图像，详细的信息参见：fishdraw。安装Node.js后，简单的示例如下：\nnode fishdraw.js --seed \u0026quot;Fish in the pool\u0026quot; --format smil \u0026gt; fish_in_the_pool.svg\r","description":"Github上一个很有意思的项目，随机生成几种鱼的图像","id":4,"section":"posts","tags":["Fish4Fun"],"title":"fishdraw","uri":"https://guankuiliu.github.io/zh/posts/2021/2021-08-16-procedurally-generated-fish-drawings/"},{"content":"Here is Guankui Liu.\n","description":"","id":5,"section":"","tags":null,"title":"About","uri":"https://guankuiliu.github.io/zh/about/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":6,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://guankuiliu.github.io/zh/posts/markdown-syntax/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)  Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } }\n$$\n","description":"A brief guide to setup KaTeX","id":7,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://guankuiliu.github.io/zh/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"Guide to emoji usage in Hugo","id":8,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://guankuiliu.github.io/zh/posts/emoji-support/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":9,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://guankuiliu.github.io/zh/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":10,"section":"gallery","tags":null,"title":"Photo","uri":"https://guankuiliu.github.io/zh/gallery/photo/"}]